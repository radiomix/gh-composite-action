##  Reusable action for releases:
##  Create an release PR

name: release-PR

description: 'Run maven release in a PR'

inputs:
  baseBranch:
    description: 'The branch to release from.'
    required: true
    default: 'develop'
  releasePrefix:
    description: 'The branch to release into.'
    required: true
    default: 'develop'
  releaseVersion:
    description: 'Release version: (like x.y.z).'
    required: true
  developmentVersion:
    description: 'Development version: (like x.y.z.0-SNAPSHOT).'
    required: true
    default: ''
  release_file:
    description: 'File to note recent releases to.'
    default: 'releases.txt'

runs:
  using: composite

  steps:
    - name: Show Release Values
      id: show-release-values
      run: |
        echo " ** RUNNING RELEASE WITH:
        baseBranch: ${{ env.baseBranch }}
        releasePrefix: ${{ env.releasePrefix }}
        releaseVersion: ${{ env.releaseVersion }}
        developmentVersion: ${{ env.developmentVersion }}
        "
        git branch -l
      shell: bash

    # Prepare git and ensure peter-evans/create-pull-request creates a new PR
    - name: Prepare PR ${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }}
      id: setup-git
      run: |
        ### git checkout ${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }}
        git config --global user.email "GithubAction@support.eyefreight.com"
        git config --global user.name " Github Actions"
        echo "****** git config -l --global *******"
        git config -l --global
        git branch -l
        echo "" >> ${{ inputs.release_file }}
        echo "New ${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }} with:" >> ${{ inputs.release_file }}
        git add ${{ inputs.release_file }}
      shell: bash

    - name: Create PR ${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }}
      # See https://github.com/peter-evans/create-pull-request
      uses: peter-evans/create-pull-request@v5
      id: create-release-pr
      with:
        # Default repo-branch to branch off this PR
        base: ${{ inputs.baseBranch }}
        # Branch name for of the PR to create
        branch: "${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }}"
        title: "${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }}"
        commit-message: Start ${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }}
        reviewers: radiomix
        body: |
          ## Release `${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }}`
          - Release version: `${{ inputs.releaseVersion }}`
          - Development version: `${{ inputs.developmentVersion }}`
          - Tag: [${{ env.artifact-id }}-${{ inputs.releaseVersion }}](https://github.com/radiomix/gh-composite-action/releases/tag/${{ env.artifact-id }}-${{ inputs.releaseVersion }})

          -------------

          - [ ] Change log has been added
          - [ ] New feature are described
          - [ ] Breaking change are described
          - [ ] Documentation has been update

          -------------

          - [ ] previous/related PR:
          - [ ] Jira Card:
          - [ ] Teams Channel:
          - [ ] Slack Channel:
        labels: ${{ inputs.releasePrefix }}

    - name: Release:Prepare ${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }}
      id: prepare-release
      run: |
        git checkout ${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }}
        git branch -l
        echo " Phase PREPARE" >> ${{ inputs.release_file }}
        git add ${{ inputs.release_file }}
        git commit -m "PREPARE ${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }}"
      shell: bash

    - name: Release:Perform ${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }}
      id: perform-release
      run: |
        git checkout ${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }}
        git branch -l
        echo " Phase PEFORM" >> ${{ inputs.release_file }}
        git add ${{ inputs.release_file }}
        git commit -m "PERFORM ${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }}"
      shell: bash

    - name: Finish ${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }}
      id: write-release-values
      run: |
        git checkout ${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }}
        git branch -l
        echo " - Base Branch              - ${{ inputs.baseBranch }}" >> ${{ inputs.release_file }}
        echo " - Target Branch            - ${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }}"  >> ${{ inputs.release_file }}
        echo " - Release Version          - ${{ inputs.releaseVersion }}"  >> ${{ inputs.release_file }}
        echo " - Development Version      - ${{ inputs.developmentVersion }}"  >> ${{ inputs.release_file }}
        echo " - Pull Request URL         - ${{ steps.create-release-pr.outputs.pull-request-url }}" >> ${{ inputs.release_file }}
        echo " - Pull Request operation   - ${{ steps.create-release-pr.outputs.pull-request-operation }}" >> ${{ inputs.release_file }}
        echo " - Pull Request Commit SHA  - ${{ steps.create-release-pr.outputs.pull-request-head-sha }}" >> ${{ inputs.release_file }}
        echo " - Tag:                     - https://github.com/radiomix/gh-composite-action/releases/tag/${{ env.artifact-id }}-${{ inputs.releaseVersion }}" >> ${{ inputs.release_file }}
        echo " - Time                     - $(date -u )" >> ${{ inputs.release_file }}
        echo " -------------------------- " >> ${{ inputs.release_file }}
        git add ${{ inputs.release_file }}
        git commit -m "Finish ${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }}"
        git push -u origin ${{ inputs.releasePrefix }}/${{ inputs.releaseVersion }}
      shell: bash
